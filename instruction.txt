Amazon-like storefront with the MySQL: CLI App
1. The app will take in orders from customers
2.  Agotar stock (deplete stock) from the store's inventory. 
3. Make sure you:
        - [x] Save the MySQL 
        - [x] Require the MySQL
        - [x] Inquirer npm packages in your homework files: your app will need them for data input and storage.



## Instructions
#1: Customer View
- [x] 1. Create a MySQL Database called `bamazon`.
- [x] 2. Then create a Table inside of that database called `products`.


3. The products table should have each of the following columns:
   [x] item_id (unique id for each product)
   [x] product_name (Name of product)
   [x] department_name
   [x] price (cost to customer)
   [x] stock_quantity (how much of the product is available in stores)


4. Populate this database with around:
   [x] 10 different products (i.e. Insert "mock" data rows into this database and table).


5. [x] Then create a Node application called `bamazonCustomer.js`. 
    Running this application will:
        1. [x] First display all of the items available for sale. Include the:
            - ids
            - names
            - prices of products for sale.
        2. [x] The app should then prompt users with 2 messages:
            - The first should ask them the ID of the product they would like to buy.
            - The second message should ask how many units of the product they would like to buy.

7. [ ] Once the customer has placed the order, your application should check:
        1.  if your store has enough of the product to meet the customer's request.
        2.  If not, the app should log a phrase like `Insufficient quantity!`, and then prevent the order from going through.


8. [ ] However, if your store _does_ have enough of the product, you should fulfill the customer's order.
        1. This means updating the SQL database to reflect the remaining quantity.
        2. Once the update goes through, show the customer the total cost of their purchase.